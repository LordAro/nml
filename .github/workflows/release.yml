name: Release

on:
  push:
    tags:
    - '*'

jobs:
  release-ubuntu:
    name: Ubuntu release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'

    - name: Install twine
      run: |
        python -m pip install --upgrade pip
        pip install twine

    - name: Build manylinux Python wheels
      uses: RalfG/python-wheels-manylinux-build@v0.2.2-manylinux2014_x86_64
      with:
        python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38'
        build-requirements: '-e .'  # pip args

    - name: Publish manylinux Python wheels
      env:
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload --username __token__ wheelhouse/*-manylinux*.whl


  release-osx:
    name: MacOS release
    runs-on: macOS-latest
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v1
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        pip install -e .

    # Only publish source package on MacOS to prevent PyPI file conflicts
    # and so we get LF line endings (useful for debian source packages)
    - name: Build and publish wheel and source distribution
      env:
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload --username __token__ dist/*.whl dist/*.tar.gz


  release-windows:
    name: Windows release
    runs-on: windows-2016
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v1
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine pyinstaller
        pip install -e .

    - name: Build and publish wheel
      env:
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py bdist_wheel
        twine upload --username __token__ dist/*.whl

    - name: Build standalone executable
      run: |
        pyinstaller nmlc.spec
        $version = python setup.py --version
        echo "::set-output name=version::$version"
      id: nml_version

    - name: Archive executable
      uses: actions/upload-artifact@v1
      with:
        name: nml-${{ steps.nml_version.outputs.version }}-win64
        path: dist/nmlc.exe
